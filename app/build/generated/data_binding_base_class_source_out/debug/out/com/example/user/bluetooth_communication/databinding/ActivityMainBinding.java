// Generated by view binder compiler. Do not edit!
package com.example.user.bluetooth_communication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.user.bluetooth_communication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout activityMain;

  @NonNull
  public final Button addUser;

  @NonNull
  public final TextView batteryLife;

  @NonNull
  public final LinearLayout dataLayout;

  @NonNull
  public final RecyclerView deleteList;

  @NonNull
  public final Button deleteUser;

  @NonNull
  public final EditText mFirstname;

  @NonNull
  public final EditText mLastName;

  @NonNull
  public final LinearLayout nameLayout;

  @NonNull
  public final Button open;

  @NonNull
  public final Button sndCommand;

  @NonNull
  public final TextView textChange;

  @NonNull
  public final TextView textName;

  @NonNull
  public final Toolbar toolbar;

  private ActivityMainBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout activityMain, @NonNull Button addUser, @NonNull TextView batteryLife,
      @NonNull LinearLayout dataLayout, @NonNull RecyclerView deleteList,
      @NonNull Button deleteUser, @NonNull EditText mFirstname, @NonNull EditText mLastName,
      @NonNull LinearLayout nameLayout, @NonNull Button open, @NonNull Button sndCommand,
      @NonNull TextView textChange, @NonNull TextView textName, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.activityMain = activityMain;
    this.addUser = addUser;
    this.batteryLife = batteryLife;
    this.dataLayout = dataLayout;
    this.deleteList = deleteList;
    this.deleteUser = deleteUser;
    this.mFirstname = mFirstname;
    this.mLastName = mLastName;
    this.nameLayout = nameLayout;
    this.open = open;
    this.sndCommand = sndCommand;
    this.textChange = textChange;
    this.textName = textName;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout activityMain = (RelativeLayout) rootView;

      id = R.id.addUser;
      Button addUser = ViewBindings.findChildViewById(rootView, id);
      if (addUser == null) {
        break missingId;
      }

      id = R.id.batteryLife;
      TextView batteryLife = ViewBindings.findChildViewById(rootView, id);
      if (batteryLife == null) {
        break missingId;
      }

      id = R.id.dataLayout;
      LinearLayout dataLayout = ViewBindings.findChildViewById(rootView, id);
      if (dataLayout == null) {
        break missingId;
      }

      id = R.id.deleteList;
      RecyclerView deleteList = ViewBindings.findChildViewById(rootView, id);
      if (deleteList == null) {
        break missingId;
      }

      id = R.id.deleteUser;
      Button deleteUser = ViewBindings.findChildViewById(rootView, id);
      if (deleteUser == null) {
        break missingId;
      }

      id = R.id.mFirstname;
      EditText mFirstname = ViewBindings.findChildViewById(rootView, id);
      if (mFirstname == null) {
        break missingId;
      }

      id = R.id.mLastName;
      EditText mLastName = ViewBindings.findChildViewById(rootView, id);
      if (mLastName == null) {
        break missingId;
      }

      id = R.id.nameLayout;
      LinearLayout nameLayout = ViewBindings.findChildViewById(rootView, id);
      if (nameLayout == null) {
        break missingId;
      }

      id = R.id.open;
      Button open = ViewBindings.findChildViewById(rootView, id);
      if (open == null) {
        break missingId;
      }

      id = R.id.sndCommand;
      Button sndCommand = ViewBindings.findChildViewById(rootView, id);
      if (sndCommand == null) {
        break missingId;
      }

      id = R.id.text_change;
      TextView textChange = ViewBindings.findChildViewById(rootView, id);
      if (textChange == null) {
        break missingId;
      }

      id = R.id.text_name;
      TextView textName = ViewBindings.findChildViewById(rootView, id);
      if (textName == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, activityMain, addUser, batteryLife,
          dataLayout, deleteList, deleteUser, mFirstname, mLastName, nameLayout, open, sndCommand,
          textChange, textName, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
