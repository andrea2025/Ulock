// Generated by view binder compiler. Do not edit!
package com.example.user.bluetooth_communication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.user.bluetooth_communication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySelectDeviceBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonConnect;

  @NonNull
  public final ImageView discover;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final RecyclerView lvNewDevices;

  @NonNull
  public final TextView newDevice;

  @NonNull
  public final LinearLayout newLayout;

  @NonNull
  public final TextView pairedDevice;

  @NonNull
  public final RecyclerView recyclerViewDevice;

  @NonNull
  public final Toolbar toolbar;

  private ActivitySelectDeviceBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonConnect, @NonNull ImageView discover,
      @NonNull LinearLayout linearLayout, @NonNull RecyclerView lvNewDevices,
      @NonNull TextView newDevice, @NonNull LinearLayout newLayout, @NonNull TextView pairedDevice,
      @NonNull RecyclerView recyclerViewDevice, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.buttonConnect = buttonConnect;
    this.discover = discover;
    this.linearLayout = linearLayout;
    this.lvNewDevices = lvNewDevices;
    this.newDevice = newDevice;
    this.newLayout = newLayout;
    this.pairedDevice = pairedDevice;
    this.recyclerViewDevice = recyclerViewDevice;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySelectDeviceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySelectDeviceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_select_device, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySelectDeviceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonConnect;
      Button buttonConnect = ViewBindings.findChildViewById(rootView, id);
      if (buttonConnect == null) {
        break missingId;
      }

      id = R.id.discover;
      ImageView discover = ViewBindings.findChildViewById(rootView, id);
      if (discover == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.lvNewDevices;
      RecyclerView lvNewDevices = ViewBindings.findChildViewById(rootView, id);
      if (lvNewDevices == null) {
        break missingId;
      }

      id = R.id.newDevice;
      TextView newDevice = ViewBindings.findChildViewById(rootView, id);
      if (newDevice == null) {
        break missingId;
      }

      id = R.id.newLayout;
      LinearLayout newLayout = ViewBindings.findChildViewById(rootView, id);
      if (newLayout == null) {
        break missingId;
      }

      id = R.id.pairedDevice;
      TextView pairedDevice = ViewBindings.findChildViewById(rootView, id);
      if (pairedDevice == null) {
        break missingId;
      }

      id = R.id.recyclerViewDevice;
      RecyclerView recyclerViewDevice = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewDevice == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivitySelectDeviceBinding((ConstraintLayout) rootView, buttonConnect, discover,
          linearLayout, lvNewDevices, newDevice, newLayout, pairedDevice, recyclerViewDevice,
          toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
